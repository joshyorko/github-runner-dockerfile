# docker-compose.yml
name: "${SERVICE_NAME:-github-runner}-docker-compose"

services:
  runner:
    # Explicitly name the image so it matches the script usage: "${SERVICE_NAME}-runner:latest"
    image: "${SERVICE_NAME}-runner:latest"
    build:
      context: .
      dockerfile: ./Dockerfile
    hostname: "runner-${RUNNER_SLOT}"
    restart: unless-stopped
    networks:
      - backend
    env_file: .env
    environment:
      - SERVICE_NAME=${SERVICE_NAME:-github-runner}
      - ENVIRONMENT=${ENVIRONMENT:-prod}
      - RUNNER_SLOT=${RUNNER_SLOT:-}
      - RUNNER_TIMESTAMP=${RUNNER_TIMESTAMP:-}
      - RUNNER_NAME=runner-${SERVICE_NAME}-${ENVIRONMENT}-slot${RUNNER_SLOT}-${RUNNER_TIMESTAMP}
      - RUNNER_LABELS=self-hosted,${SERVICE_NAME},${ENVIRONMENT},slot-${RUNNER_SLOT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 8.8.8.8
      - 1.1.1.1
    extra_hosts:
      - "api.github.com:140.82.113.6"
      - "github.com:140.82.113.4"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: 0.5
          memory: 1024M

  cache:
    image: ghcr.io/falcondev-oss/github-actions-cache-server:latest
    restart: unless-stopped
    networks:
      - backend
    ports:
      - '3000:3000'
    environment:
      API_BASE_URL: http://cache:3000
      STORAGE_DRIVER: filesystem
      STORAGE_FILESYSTEM_PATH: /app/.data/storage/filesystem
      DB_DRIVER: sqlite
      CACHE_CLEANUP_OLDER_THAN_DAYS: 90
      CACHE_CLEANUP_CRON: "0 0 * * *"
      UPLOAD_CLEANUP_CRON: "*/10 * * * *"
      ENABLE_DIRECT_DOWNLOADS: "false"
    volumes:
      - cache:/app/.data

volumes:
  cache:

networks:
  backend:
    external: false
